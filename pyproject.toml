[project]
name = "allsplice"
version = "0.1.0"
description = "Universal AI Gateway: OpenAI-compatible API server to route chat completions to multiple providers."
authors = [
    { name = "trafflux" }
]
requires-python = ">=3.12"
dependencies = [
    "fastapi",
    "uvicorn",
    "uvicorn[standard]",
    "pydantic",
    "pydantic-settings",
    "cerebras-cloud-sdk",
    "ollama",
    "python-dotenv",
    "httpx",
    "anyio",
    "typing-extensions",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "ruff",
    "mypy",
    "pre-commit",
    "types-requests"
]

[tool.uv]
# Configure for Docker container usage - no virtual environment needed
# Use UV_SYSTEM_PYTHON=1 environment variable instead

[tool.pytest.ini_options]
addopts = "-q -ra -W error::DeprecationWarning --cov=src --cov-report=term-missing"
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.ruff]
target-version = "py312"
line-length = 100

# Exclude files/directories from linting and formatting
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "venv",
    ".venv",
    "*.pyc",
    "*.egg-info",
    ".mypy_cache",
    ".ruff_cache",
    "docs",
    "generated_code/",
]

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "F",     # pyflakes
    "W",     # pycodestyle warnings
    "N",     # pep8-naming
    "I",     # isort
    "C90",   # mccabe complexity
    "UP",    # pyupgrade
    "B",     # flake8-bugbear
    "A",     # flake8-builtins
    "C4",    # flake8-comprehensions
    "T20",   # flake8-print
    "SIM",   # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "T201",  # print found (allow prints for now)
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "B017",  # allow assert blindly on Exception in tests
    "SIM117", # allow nested with statements in tests for clarity
]

[tool.ruff.lint.isort]
known-first-party = ["ai_gateway"]
combine-as-imports = true
force-single-line = false

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.mypy]
python_version = "3.12"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
disallow_untyped_defs = true
no_implicit_optional = true
pretty = true
mypy_path = "src"
show_error_codes = true
warn_unreachable = true
warn_no_return = true

# Exclude files/directories from type checking
exclude = [
    "build/",
    "dist/",
    "venv/",
    ".venv/",
    "generated_code/",
    "docs/",
    ".*\\.egg-info/",
]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
